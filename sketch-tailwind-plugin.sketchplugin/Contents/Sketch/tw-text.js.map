{"version":3,"sources":["webpack://exports/webpack/bootstrap","webpack://exports/./node_modules/@skpm/fs/index.js","webpack://exports/./src/tw-text.js","webpack://exports/external \"buffer\"","webpack://exports/external \"sketch\"","webpack://exports/external \"util\""],"names":["context","doc","sketch","fromNative","document","popUp","options","selection","UI","getSelectionFromUser","okClicked","layers","target","setTargetLayers","length","createFile","message","getSharedTextStyles","selectedLayers","forEach","layer","push","textStyles","createFontFamilies","createFontSizes","saveFile","familyObject","families","map","$style","style","sketchObject","textStyle","attributes","NSFont","familyName","Object","values","$family","replace","toLowerCase","fontSizesObject","baseItem","filter","$item","getFirstPart","name","baseFontSize","pointSize","smallerSizes","biggerSizes","Set","sort","$size","index","array","repeat","indexOf","substr","styles","save","NSSavePanel","savePanel","setNameFieldStringValue","setAllowedFileTypes","setAllowsOtherFileTypes","setExtensionHidden","runModal","path","URL","fs","writeFileSync","util","inspect","depth"],"mappings":";;;;;;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;AClFA;AACA;AACA,aAAa,mBAAO,CAAC,sBAAQ;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mBAAmB,OAAO;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;;AAEA;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","file":"tw-text.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/tw-text.js\");\n","// TODO: async. Should probably be done with NSFileHandle and some notifications\n// TODO: file descriptor. Needs to be done with NSFileHandle\nvar Buffer = require('buffer').Buffer\n\nfunction encodingFromOptions(options, defaultValue) {\n  return options && options.encoding\n    ? String(options.encoding)\n    : (\n      options\n        ? String(options)\n        : defaultValue\n    )\n}\n\nmodule.exports.constants = {\n  F_OK: 0,\n  R_OK: 4,\n  W_OK: 2,\n  X_OK: 1\n}\n\nmodule.exports.accessSync = function(path, mode) {\n  mode = mode | 0\n  var fileManager = NSFileManager.defaultManager()\n\n  switch (mode) {\n    case 0:\n      canAccess = module.exports.existsSync(path)\n      break\n    case 1:\n      canAccess = Boolean(Number(fileManager.isExecutableFileAtPath(path)))\n      break\n    case 2:\n      canAccess = Boolean(Number(fileManager.isWritableFileAtPath(path)))\n      break\n    case 3:\n      canAccess = Boolean(Number(fileManager.isExecutableFileAtPath(path))) && Boolean(Number(fileManager.isWritableFileAtPath(path)))\n      break\n    case 4:\n      canAccess = Boolean(Number(fileManager.isReadableFileAtPath(path)))\n      break\n    case 5:\n      canAccess = Boolean(Number(fileManager.isReadableFileAtPath(path))) && Boolean(Number(fileManager.isExecutableFileAtPath(path)))\n      break\n    case 6:\n      canAccess = Boolean(Number(fileManager.isReadableFileAtPath(path))) && Boolean(Number(fileManager.isWritableFileAtPath(path)))\n      break\n    case 7:\n      canAccess = Boolean(Number(fileManager.isReadableFileAtPath(path))) && Boolean(Number(fileManager.isWritableFileAtPath(path))) && Boolean(Number(fileManager.isExecutableFileAtPath(path)))\n      break\n  }\n\n  if (!canAccess) {\n    throw new Error('Can\\'t access ' + String(path))\n  }\n}\n\nmodule.exports.appendFileSync = function(file, data, options) {\n  if (!module.exports.existsSync(file)) {\n    return module.exports.writeFileSync(file, data, options)\n  }\n\n  var handle = NSFileHandle.fileHandleForWritingAtPath(file)\n  handle.seekToEndOfFile()\n\n  var encoding = encodingFromOptions(options, 'utf8')\n\n  var nsdata = Buffer.from(data, encoding === 'NSData' || encoding === 'buffer' ? undefined : encoding).toNSData()\n\n  handle.writeData(nsdata)\n}\n\nmodule.exports.chmodSync = function(path, mode) {\n  var err = MOPointer.alloc().init()\n  var fileManager = NSFileManager.defaultManager()\n  fileManager.setAttributes_ofItemAtPath_error({\n    NSFilePosixPermissions: mode\n  }, path, err)\n\n  if (err.value() !== null) {\n    throw new Error(err.value())\n  }\n}\n\nmodule.exports.copyFileSync = function(path, dest, flags) {\n  var err = MOPointer.alloc().init()\n  var fileManager = NSFileManager.defaultManager()\n  fileManager.copyItemAtPath_toPath_error(path, dest, err)\n\n  if (err.value() !== null) {\n    throw new Error(err.value())\n  }\n}\n\nmodule.exports.existsSync = function(path) {\n  var fileManager = NSFileManager.defaultManager()\n  return Boolean(Number(fileManager.fileExistsAtPath(path)))\n}\n\nmodule.exports.linkSync = function(existingPath, newPath) {\n  var err = MOPointer.alloc().init()\n  var fileManager = NSFileManager.defaultManager()\n  fileManager.linkItemAtPath_toPath_error(existingPath, newPath, err)\n\n  if (err.value() !== null) {\n    throw new Error(err.value())\n  }\n}\n\nmodule.exports.mkdirSync = function(path, mode) {\n  mode = mode || 0o777\n  var err = MOPointer.alloc().init()\n  var fileManager = NSFileManager.defaultManager()\n  fileManager.createDirectoryAtPath_withIntermediateDirectories_attributes_error(path, false, {\n    NSFilePosixPermissions: mode\n  }, err)\n\n  if (err.value() !== null) {\n    throw new Error(err.value())\n  }\n}\n\nmodule.exports.mkdtempSync = function(path) {\n  function makeid() {\n    var text = \"\";\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n    for (var i = 0; i < 6; i++)\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n\n    return text;\n  }\n  var tempPath = path + makeid()\n  module.exports.mkdirSync(tempPath)\n  return tempPath\n}\n\nmodule.exports.readdirSync = function(path) {\n  var fileManager = NSFileManager.defaultManager()\n  var paths = fileManager.subpathsAtPath(path)\n  var arr = []\n  for (var i = 0; i < paths.length; i++) {\n    arr.push(String(paths[i]))\n  }\n  return arr\n}\n\nmodule.exports.readFileSync = function(path, options) {\n  var encoding = encodingFromOptions(options, 'buffer')\n  var fileManager = NSFileManager.defaultManager()\n  var data = fileManager.contentsAtPath(path)\n  var buffer = Buffer.from(data)\n\n  if (encoding === 'buffer') {\n    return buffer\n  } else if (encoding === 'NSData') {\n    return buffer.toNSData()\n  } else {\n    return buffer.toString(encoding)\n  }\n}\n\nmodule.exports.readlinkSync = function(path) {\n  var err = MOPointer.alloc().init()\n  var fileManager = NSFileManager.defaultManager()\n  var result = fileManager.destinationOfSymbolicLinkAtPath_error(path, err)\n\n  if (err.value() !== null) {\n    throw new Error(err.value())\n  }\n\n  return String(result)\n}\n\nmodule.exports.realpathSync = function(path) {\n  return String(NSString.stringByResolvingSymlinksInPath(path))\n}\n\nmodule.exports.renameSync = function(oldPath, newPath) {\n  var err = MOPointer.alloc().init()\n  var fileManager = NSFileManager.defaultManager()\n  fileManager.moveItemAtPath_toPath_error(oldPath, newPath, err)\n\n  if (err.value() !== null) {\n    throw new Error(err.value())\n  }\n}\n\nmodule.exports.rmdirSync = function(path) {\n  var err = MOPointer.alloc().init()\n  var fileManager = NSFileManager.defaultManager()\n  fileManager.removeItemAtPath_error(path, err)\n\n  if (err.value() !== null) {\n    throw new Error(err.value())\n  }\n}\n\nmodule.exports.statSync = function(path) {\n  var err = MOPointer.alloc().init()\n  var fileManager = NSFileManager.defaultManager()\n  var result = fileManager.attributesOfItemAtPath_error(path, err)\n\n  if (err.value() !== null) {\n    throw new Error(err.value())\n  }\n\n  return {\n    dev: String(result.NSFileDeviceIdentifier),\n    // ino: 48064969, The file system specific \"Inode\" number for the file.\n    mode: result.NSFileType | result.NSFilePosixPermissions,\n    nlink: Number(result.NSFileReferenceCount),\n    uid: String(result.NSFileOwnerAccountID),\n    gid: String(result.NSFileGroupOwnerAccountID),\n    // rdev: 0, A numeric device identifier if the file is considered \"special\".\n    size: Number(result.NSFileSize),\n    // blksize: 4096, The file system block size for i/o operations.\n    // blocks: 8, The number of blocks allocated for this file.\n    atimeMs: Number(result.NSFileModificationDate.timeIntervalSince1970()) * 1000,\n    mtimeMs: Number(result.NSFileModificationDate.timeIntervalSince1970()) * 1000,\n    ctimeMs: Number(result.NSFileModificationDate.timeIntervalSince1970()) * 1000,\n    birthtimeMs: Number(result.NSFileCreationDate.timeIntervalSince1970()) * 1000,\n    atime: new Date(Number(result.NSFileModificationDate.timeIntervalSince1970()) * 1000 + 0.5), // the 0.5 comes from the node source. Not sure why it's added but in doubt...\n    mtime: new Date(Number(result.NSFileModificationDate.timeIntervalSince1970()) * 1000 + 0.5),\n    ctime: new Date(Number(result.NSFileModificationDate.timeIntervalSince1970()) * 1000 + 0.5),\n    birthtime: new Date(Number(result.NSFileCreationDate.timeIntervalSince1970()) * 1000 + 0.5),\n    isBlockDevice: function() { return result.NSFileType === NSFileTypeBlockSpecial },\n    isCharacterDevice: function() { return result.NSFileType === NSFileTypeCharacterSpecial },\n    isDirectory: function() { return result.NSFileType === NSFileTypeDirectory },\n    isFIFO: function() { return false },\n    isFile: function() { return result.NSFileType === NSFileTypeRegular },\n    isSocket: function() { return result.NSFileType === NSFileTypeSocket },\n    isSymbolicLink: function() { return result.NSFileType === NSFileTypeSymbolicLink },\n  }\n}\n\nmodule.exports.symlinkSync = function(target, path) {\n  var err = MOPointer.alloc().init()\n  var fileManager = NSFileManager.defaultManager()\n  var result = fileManager.createSymbolicLinkAtPath_withDestinationPath_error(path, target, err)\n\n  if (err.value() !== null) {\n    throw new Error(err.value())\n  }\n}\n\nmodule.exports.truncateSync = function(path, len) {\n  var hFile = NSFileHandle.fileHandleForUpdatingAtPath(sFilePath)\n  hFile.truncateFileAtOffset(len || 0)\n  hFile.closeFile()\n}\n\nmodule.exports.unlinkSync = function(path) {\n  var err = MOPointer.alloc().init()\n  var fileManager = NSFileManager.defaultManager()\n  var result = fileManager.removeItemAtPath_error(path, err)\n\n  if (err.value() !== null) {\n    throw new Error(err.value())\n  }\n}\n\nmodule.exports.utimesSync = function(path, aTime, mTime) {\n  var err = MOPointer.alloc().init()\n  var fileManager = NSFileManager.defaultManager()\n  var result = fileManager.setAttributes_ofItemAtPath_error({\n    NSFileModificationDate: aTime\n  }, path, err)\n\n  if (err.value() !== null) {\n    throw new Error(err.value())\n  }\n}\n\nmodule.exports.writeFileSync = function(path, data, options) {\n  var encoding = encodingFromOptions(options, 'utf8')\n\n  var nsdata = Buffer.from(\n    data, encoding === 'NSData' || encoding === 'buffer' ? undefined : encoding\n  ).toNSData()\n\n  nsdata.writeToFile_atomically(path, true)\n}\n","import sketch from 'sketch';\nimport fs from '@skpm/fs';\nimport util from 'util';\n\nexport default function(context){\n  const doc = sketch.fromNative(context.document);\n\n  function popUp() {\n    const options = ['All styles', 'Selected styles'];\n    const selection = sketch.UI.getSelectionFromUser(\"What do you want to export?\", options);\n    const okClicked = selection[2];\n    let layers = '';\n\n    if (okClicked) {\n      const target = options[selection[1]];\n      layers = setTargetLayers(target);\n      if (layers.length) {\n        createFile(layers);\n      } else {\n        sketch.UI.message('No layers selected');\n      }\n    }\n  }\n\n  function setTargetLayers(target) {\n    let layers = [];\n    if (target == 'All styles') {\n      layers = doc.getSharedTextStyles();\n    } else {\n      let selection = doc.selectedLayers;\n      selection.forEach((layer) => {\n        layers.push(layer);\n      });\n    }\n    return layers\n  }\n\n  function createFile(layers) {\n    let textStyles = {};\n    textStyles['fonts'] = createFontFamilies(layers);\n    textStyles['textSizes'] = createFontSizes(layers);\n    saveFile(textStyles);\n  }\n\n  function createFontFamilies(layers){\n    let familyObject = {};\n\n    const families = layers.map($style => $style.style.sketchObject.textStyle().attributes().NSFont.familyName());\n    Object.values(families).forEach(($family) => {\n      familyObject[$family.replace(' ','-').toLowerCase()] = $family;\n    });\n\n    return familyObject;\n  }\n\n  function createFontSizes(layers){\n    let fontSizesObject = {}\n\n    // Get base font-size\n    let baseItem = layers.filter($item => getFirstPart($item.name) == 'base');\n    let baseFontSize = 16;\n\n    if (baseItem.length > 1 && typeof baseItem == 'object') {\n      baseFontSize = baseItem[0].style.sketchObject.textStyle().attributes().NSFont.pointSize();\n    }\n\n    // Group smaller and items, map values only\n    let smallerSizes = layers.map($item => $item.style.sketchObject.textStyle().attributes().NSFont.pointSize())\n                                  .filter($item => $item < baseFontSize)\n    let biggerSizes = layers.map($item => $item.style.sketchObject.textStyle().attributes().NSFont.pointSize())\n                                  .filter($item => $item > baseFontSize)\n\n    // Remove duplicates and sort\n    smallerSizes = [...new Set(smallerSizes)].sort();\n    biggerSizes = [...new Set(biggerSizes)].sort();\n\n    // Push smaller sizes\n    Object.values(smallerSizes).forEach(($size, index, array) => {\n      if (index == array.length - 1 ) {\n        fontSizesObject['sm'] = `${$size/16}rem`;\n      } else if (index == array.length - 2 ){\n        fontSizesObject['xs'] = `${$size/16}rem`;\n      } else{\n        fontSizesObject[`${'x'.repeat(array.length - 1)}s`] = `${$size/16}rem`;\n      }\n    })\n\n    // Push base\n    fontSizesObject['base'] = `${baseFontSize/16}rem`;\n\n    // Push bigger sizes\n    Object.values(biggerSizes).forEach(($size, index, array) => {\n      if (index == 0 ) {\n        fontSizesObject['lg'] = `${$size/16}rem`;\n      } else if (index == 1 ){\n        fontSizesObject['xl'] = `${$size/16}rem`;\n      } else{\n        fontSizesObject[`${'x'.repeat(index)}xl`] = `${$size/16}rem`;\n      }\n    })\n\n    return fontSizesObject;\n  }\n\n  function getFirstPart(name){\n    // Check if the name contains a path info, if so, remove it\n    if (name.indexOf('/') !== -1 ) {\n      name = name.substr(0, name.indexOf('/'));\n    }\n    return name.toLowerCase();\n  }\n\n  function saveFile(styles) {\n    const save = NSSavePanel.savePanel();\n    save.setNameFieldStringValue(\"text.js\");\n    save.setAllowedFileTypes([\"js\"]);\n    save.setAllowsOtherFileTypes(false);\n    save.setExtensionHidden(true);\n\n    if (save.runModal()) {\n      const path = save.URL().path();\n      fs.writeFileSync(path, util.inspect(styles,{ depth: null }), 'utf8');\n      sketch.UI.message(\"Text exported\");\n    }\n  }\n\n  // Initialize\n  popUp();\n};\n","module.exports = require(\"buffer\");","module.exports = require(\"sketch\");","module.exports = require(\"util\");"],"sourceRoot":""}